<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace : 名称空间-->
<mapper namespace="boy.learning.mapper.BrandMapper">

<!--数据库表的名称和实体类的名称不一样，会出现问题
    *起别名，对不一样的列名起别名，每次都要定义别名
    *resultMap
        1.定义resultMap标签
        2.在select标签中用resultMap代替resutType
-->


    <!--    id唯一标识，type映射类型，
            id完成主键映射，result一般键的映射
                column列名
                property属性名
    -->
    <resultMap id="brandResultMap" type="brand">
        <!--      列名                  属性名-->
        <result column="brand_name" property="brandName"></result>
        <result column="company_name" property="companyName"></result>
    </resultMap>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand(company_name,brand_name,ordered,description,status)
        values (#{companyName},#{brandName},#{ordered},#{description},#{status})
    </insert>

    <update id="update" >
        update tb_brand
        <set>
            <if test="companyName!=null and companyName !=''">company_name = #{companyName},</if>
            <if test="brandName!=null and brandName !=''">brand_name = #{brandName},</if>
            <if test="ordered!=null">ordered = #{ordered},</if>
            <if test="description!=null and description !=''">description = #{description},</if>
            <if test="status!=null">status = #{status}</if>
        </set>
        where id = #{id}
    </update>



    <!--    查询所有-->
    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand
    </select>
<!--    查看详情-->
    <!--    参数占位符
                #{}：会替换为 ？，防止sql注入
                ${}:不会替换
    -->
    <!--    特殊字符
                1.转义字符：&lt
                2.CDATA区:CD
    -->
    <select id="selectById" resultMap="brandResultMap">
        select * from tb_brand where id
                                         =
                                     #{id}
    </select>

<!--    条件查询-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where 1=1
        <if test="status != null">and status = #{status}</if>
        <if test="companyName != null and companyName != '' ">and company_name like #{companyName}</if>
        <if test="brandName != null and brandName != '' ">and brand_name like #{brandName}</if>
    </select>


    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <choose>
                <when test="status!=null">status = #{status}</when>
                <when test="companyName!=null and company!=''">companyName like #{companyName}</when>
                <when test="brandName!=null and brandName!=''">brandName like #{brandName}</when>
            </choose>
        </where>
    </select>

    <delete id="deleteById">
        delete from tb_brand where id = #{id}
    </delete>

<!--    MyBatis会将数组参数封装为一个map集合
            默认：array = 数组
            使用@param注解改变map集合默认的key的名称
            -->
    <delete id="deleteByIds">
        delete from tb_brand where id
             in
                 <foreach collection="array" item="id" separator="," open="(" close=")">
                        #{id}
                 </foreach>
                 ;
    </delete>


    <!--    引用     sql片段-->
<!--    <sql id="brand_column">-->
<!--        id, brand_name brandName,company_name companyName,ordered,description,status-->
<!--    </sql>-->

<!--    <select id="selectAll" resultType="boy.learning.pojo.Brand">-->
<!--        select <include refid="brand_column"/>-->
<!--        from tb_brand-->
<!--    </select>-->


</mapper>